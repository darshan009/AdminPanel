doctype html
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    title OrderCMS
    // Tell the browser to be responsive to screen width
    meta(content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no', name='viewport')
    // Bootstrap 3.3.5
    link(rel='stylesheet', href='../public/bootstrap/css/bootstrap.min.css')
    // Font Awesome
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css')
    // Ionicons
    link(rel='stylesheet', href='https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css')
    // DataTables
    link(rel='stylesheet', href='../public/plugins/datatables/dataTables.bootstrap.css')
    // datepicker
    link(rel='stylesheet', href='../public/bootstrap/css/datepicker.css')
    // Theme style
    link(rel='stylesheet', href='../public/dist/css/AdminLTE.min.css')
    //
      AdminLTE Skins. Choose a skin from the css/skins
      folder instead of downloading all of them to reduce the load.
    link(rel='stylesheet', href='../public/dist/css/skins/_all-skins.min.css')
    // HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries
    // WARNING: Respond.js doesn't work if you view the page via file://
    //if lt IE 9
      script(src='https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js')
      script(src='https://oss.maxcdn.com/respond/1.4.2/respond.min.js')
  body.hold-transition.skin-blue.sidebar-mini
    .wrapper
      header.main-header
        // Logo
        a.logo(href='/itemList')
          // mini logo for sidebar mini 50x50 pixels
          span.logo-mini
            b A
            | LT
          // logo for regular state and mobile devices
          span.logo-lg
            b Order
            | CMS
        // Header Navbar: style can be found in header.less
        nav.navbar.navbar-static-top(role='navigation')
          .navbar-custom-menu
            ul.nav.navbar-nav
              li.dropdown.user.user-menu
                a.dropdown-toggle(href='#', data-toggle='dropdown')
                  img.user-image(src='../public/dist/img/user2-160x160.jpg', alt='User Image')
                  span.hidden-xs #{currentUser.firstName}
                ul.dropdown-menu
                  // User image
                  li.user-header
                    img.img-circle(src='../public/dist/img/user2-160x160.jpg', alt='User Image')
                    p
                      | #{currentUser.firstName} - Web Developer
                      small Admin User
                  // Menu Footer
                  li.user-footer
                    .pull-left
                      a.btn.btn-default.btn-flat(href='#') Profile
                    .pull-right
                      a.btn.btn-default.btn-flat(href='/logout') Sign out
      // Left side column. contains the logo and sidebar
      aside.main-sidebar
        // sidebar: style can be found in sidebar.less
        section.sidebar
          // Sidebar user panel
          .user-panel
            .pull-left.image
              img.img-circle(src='../public/dist/img/user2-160x160.jpg', alt='User Image')
            .pull-left.info
              p #{currentUser.firstName}
          // search form
          form.sidebar-form(action='#', method='get')
            .input-group
              input.form-control(type='text', name='q', placeholder='Search...')
              span.input-group-btn
                button#search-btn.btn.btn-flat(type='submit', name='search')
                  i.fa.fa-search
          // /.search form
          // sidebar menu: : style can be found in sidebar.less
          ul.sidebar-menu
            li.header MAIN NAVIGATION
            if (currentUser.type != 'Staff')
              li
                a(href='#')
                  i.fa.fa-table
                  span User
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/userList')
                      i.fa.fa-circle-o
                      |  List of Users
                  li
                    a(href='/addUser')
                      i.fa.fa-circle-o
                      |  Add a User
                  li
                    a(href='/orderHistory')
                      i.fa.fa-circle-o
                      |  User Order history
              li
                a(href='#')
                  i.fa.fa-envelope
                  span Categories
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/categoryList')
                      i.fa.fa-circle-o
                      |  List of Categories
                  li
                    a(href='/addCategory')
                      i.fa.fa-circle-o
                      |  Add a category
              li
                a(href='#')
                  i.fa.fa-calendar
                  span Recipe
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/itemList')
                      i.fa.fa-circle-o
                      |  List of Recipes
                  li
                    a(href='/addItem')
                      i.fa.fa-circle-o
                      |  Add a Recipe
                  li
                    a(href='/menuList')
                      i.fa.fa-circle-o
                      |  List of Menu
                  li
                    a(href='/addMenu')
                      i.fa.fa-circle-o
                      |  Add a Menu
              li
                a(href='/order')
                  i.fa.fa-share
                  span Order
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li.active
                    a(href='/orderList')
                      i.fa.fa-circle-o
                      |  List of Orders
                  li
                    a(href='/addOrder')
                      i.fa.fa-circle-o
                      |  Place an Order
              li
                a(href='/singleItems')
                  i.fa.fa-pie-chart
                  | Item List
              li.active
                a(href='#')
                  i.fa.fa-pie-chart
                  span New Assembly
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/nassembly')
                      i.fa.fa-circle-o
                      |  Single orders
                  li.active
                    a(href='/singleOrdersWithExtras')
                      i.fa.fa-circle-o
                      |  Single orders with Extra
                  li
                    a(href='/multipleCategoryOrders')
                      i.fa.fa-circle-o
                      |  Multiple Category Orders
            li
              a(href='/assembly')
                i.fa.fa-pie-chart
                span Assembly
                i.fa.fa-angle-left.pull-right
              ul.treeview-menu
                li
                  a(href='/assembly')
                    i.fa.fa-circle-o
                    |  Single orders
                li
                  a(href='/mixedAssembly')
                    i.fa.fa-circle-o
                    |  Single orders with Extra
                li
                  a(href='/multipleAssembly')
                    i.fa.fa-circle-o
                    |  Multiple Category Orders
        // /.sidebar
      // Content Wrapper. Contains page content
      .content-wrapper
        // Main content
        section.content
          .row
            .box.box-info
              .box-header
                h3.box-title
                  b Choose Category
              // /.box-header
              .box-body
                form.form-horizontal
                  .form-group
                    label.col-sm-2.control-label Pick a date
                    .col-sm-3
                      .input-group
                        .input-group-addon
                          i.fa.fa-calendar
                        input.form-control.datepicker#dateSelected(type='text', name='date' value=(menu?(menu.date?menu.date:''):''))
                  .form-group
                    label.col-sm-2.control-label Meal type
                    .col-sm-3
                      select.form-control(name = 'meal' id='mealSelected')
                        option Lunch
                        option Dinner
                  .form-group
                    label.col-sm-2.control-label Veg Categories
                    .col-sm-6
                      table
                        tr
                          each itemCategory in itemCategories
                            td
                              button.btn.btn-app#selectedCategory(type='button' data-getButton='n-#{itemCategory._id}' data-mealType = 'Veg' value = '#{itemCategory.name}')
                                | #{itemCategory.name}
                          td
                            button.btn.btn-app#selectedCategory(type='button' data-getButton='int' data-mealType = 'Veg' value = 'International')
                              | International
                  .form-group
                    label.col-sm-2.control-label Non-Veg Categories
                    .col-sm-6
                      table
                        tr
                          each itemCategory in itemCategories
                            td
                              button.btn.btn-app#selectedCategory(type='button' data-getButton='n-#{itemCategory._id}' data-mealType = 'Non-Veg' value = '#{itemCategory.name}')
                                | #{itemCategory.name}
                          td
                            button.btn.btn-app#selectedCategory(type='button' data-getButton='int' data-mealType = 'Non-Veg' value = 'International')
                              | International
          .row#displaySimilar
          .row#displaySimilarBarcode
          .row#displaySection
          .row#displaySectionBarcode
              // /.box-body
            // /.box
          // /.row
        // /.content
      // /.content-wrapper
      footer.main-footer
        .pull-right.hidden-xs
          b Version
          |  2.3.0
        strong
          | OrderCMS WAS Powered by
          a(href='http://keystonejs.com/') KeystoneJS
          | .
        |  version 0.3.16.
    // ./wrapper
    // jQuery 2.1.4
    script(src='../public/plugins/jQuery/jQuery-2.1.4.min.js')
    // Bootstrap 3.3.5
    script(src='../public/bootstrap/js/bootstrap.min.js')
    // FastClick
    script(src='../public/plugins/fastclick/fastclick.min.js')
    // DataTables
    script(src='../public/plugins/datatables/jquery.dataTables.min.js')
    script(src='../public/plugins/datatables/dataTables.bootstrap.min.js')
    // date-picker
    script(src='../public/bootstrap/js/bootstrap-datepicker.js')
    //barcode
    script(type='text/javascript', src='../public/plugins/jQuery/jquery-barcode.js')
    // AdminLTE App
    script(src='../public/dist/js/app.min.js')
    // page script
    script.
      $(function () {
        $.fn.dataTable.ext.errMode = 'none';
        //get todays date
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth()+1; //January is 0!
        var yyyy = today.getFullYear();
        if(dd<10){
        dd='0'+dd
        }
        if(mm<10){
        mm='0'+mm
        }
        var today = mm+'/'+dd+'/'+yyyy;
        console.log(today);
        $('#dateSelected').val(today);
        
        $('.datepicker').datepicker();
        //non-customized
        $('button#selectedCategory').click(function(){
          $category = $(this).val();
          $date = $('#dateSelected').val();
          $mealType = $(this).attr('data-mealType');
          $meal = $('#mealSelected').val();
          if ( !$('#mealSelected').val() )
            alert("Please Select Lunch or Dinner");
          if ( !$('#dateSelected').val() )
            alert("Please Select Date");
          $.getJSON("/getSingleOrdersWithExtras", {
            meal : $meal,
            date: $date,
            ajax : true
          },function(listOfOrdersByAddresses){
            
            //get by category and mealType
            var listOfOrdersByAddress = [];
            for (var m=0; m<listOfOrdersByAddresses.length; m++)
              for (l=0; l<listOfOrdersByAddresses[m].orderList.length; l++)
                if (listOfOrdersByAddresses[m].orderList[l]._id.item.category.name != 'Extras')
                  if (listOfOrdersByAddresses[m].orderList[l]._id.item.category.name == $category && listOfOrdersByAddresses[m].orderList[l]._id.item.type == $mealType)
                    listOfOrdersByAddress.push(listOfOrdersByAddresses[m]);
            console.log(listOfOrdersByAddress);
            
            //sort listOfOrdersByAddress by similar orders
            var positions = [], sortedMixedOrders = [];
            for (var a=0; a<listOfOrdersByAddress.length; a++) {
              for (var b=a+1; b<listOfOrdersByAddress.length; b++) {
                var foundCount = 0;
                for (var c=0; c<listOfOrdersByAddress[a].orderList.length; c++) {
                  for (var d=0; d<listOfOrdersByAddress[b].orderList.length; d++) {
                    if (listOfOrdersByAddress[a].orderList.length == listOfOrdersByAddress[b].orderList.length) {
                      if (listOfOrdersByAddress[a].orderList[c]._id.item.title == listOfOrdersByAddress[b].orderList[d]._id.item.title) {
                        foundCount++;
                      }
                      if (foundCount == listOfOrdersByAddress[a].orderList.length) {
                        positions.push(a);
                        positions.push(b);
                      }
                    }
                  }
                }
              }
            }
            //get unique positions
            var uniquePositions = [];
            for (var a=0; a<positions.length; a++) {
              if (uniquePositions.indexOf(positions[a]) < 0)
                uniquePositions.push(positions[a]);
            }
            console.log(uniquePositions);
            //now get sorted arrays
            for (var b=0; b<uniquePositions.length; b++) {
              sortedMixedOrders.push(listOfOrdersByAddress[uniquePositions[b]]);
            }
            
            console.log(sortedMixedOrders.length);
            
            //displaying of sortedMixedOrders
            $('#displaySimilar').html('');
            $('#displaySimilarBarcode').html('');
            var similarDivId = 0;
            for (var m=0; m<sortedMixedOrders.length; m++) {
              //console.log(sortedMixedOrders[m].mixed);
              var similarCount = 0;
              for (var z=m; z<sortedMixedOrders.length; z++) {
                //console.log(sortedSimilarOrders[m]);
                if (sortedMixedOrders[m].orderList[0]._id.item.title == sortedMixedOrders[z].orderList[0]._id.item.title && sortedMixedOrders[m].orderList[1]._id.item.title == sortedMixedOrders[z].orderList[1]._id.item.title || sortedMixedOrders[m].orderList[1]._id.item.title == sortedMixedOrders[z].orderList[0]._id.item.title && sortedMixedOrders[m].orderList[0]._id.item.title == sortedMixedOrders[z].orderList[1]._id.item.title)
                  similarCount++;
              }
              if (similarCount > 0) {
                var drawOnce = true, similarDivData = [], addressArraySimilar = [];
                for (var y=0; y<similarCount; y++) {                  
                  for (var i = 0; i < sortedMixedOrders[m+y].orderList.length; i++) {
                    addressArraySimilar.push(sortedMixedOrders[m+y].address._id._id);
                    if (drawOnce) {
                      var addToTable = '<div id="'+similarDivId+'" class="box box-success"><div class="box-header"><h3 class="box-title">Similar Order List - <b>'+$category+' -- '+$mealType+'</b></h3></div><!-- /.box-header--><div id="" class="box-body"><table id="example3" class="table table-bordered table-hover"><thead><tr><th>User</th><th>Address</th><th>Meal</th><th>Details</th><th>Container</th></tr></thead><tbody>';
                      drawOnce = false;
                    }
                    if (i == 0) {
                      similarDivData.push(sortedMixedOrders[m+y]);
                      addToTable += '<tr><td rowspan='+sortedMixedOrders[m+y].orderList.length+'>'+ sortedMixedOrders[m+y].user +'</td>';
                      addToTable += '<td rowspan='+sortedMixedOrders[m+y].orderList.length+'>'+ sortedMixedOrders[m+y].address._id.tag +',</br>'+sortedMixedOrders[m+y].address._id.flatNo+',</br>'+sortedMixedOrders[m+y].address._id.streetAddress+',</br>'+sortedMixedOrders[m+y].address._id.landmark+',</br>'+sortedMixedOrders[m+y].address._id.pincode+'</td>';
                    }
                    addToTable += '<td>'+ sortedMixedOrders[m+y].orderList[i]._id.item.title +'</td>';
                    addToTable += '<td>';
                    if (sortedMixedOrders[m+y].orderList[i].subItems) {
                      for (var p=0; p<sortedMixedOrders[m+y].orderList[i].subItems._id.subItemsArray.length; p++)
                        addToTable += ''+sortedMixedOrders[m+y].orderList[i].subItems._id.subItemsArray[p].quantity+'-'+sortedMixedOrders[m+y].orderList[i].subItems._id.subItemsArray[p].name+',</br>';
                    }else if (sortedMixedOrders[m+y].orderList[i]._id.subItems.length > 0) {
                      for (var p=0; p<sortedMixedOrders[m+y].orderList[i]._id.subItems.length; p++)
                        addToTable += ''+sortedMixedOrders[m+y].orderList[i]._id.subItems[p].quantity+'-'+sortedMixedOrders[m+y].orderList[i]._id.subItems[p].name+',</br>';
                    }
                    addToTable += '<b>Total Quantity - '+sortedMixedOrders[m+y].orderList[i].singleQuantity+'</td>';
                    addToTable += '<td><b>'+sortedMixedOrders[m+y].orderList[i].containerType+'</b><br>';
                    if (sortedMixedOrders[m+y].orderList[i].specialinstruction)
                      addToTable += '<br /><b> Speacial Instruction - '+sortedMixedOrders[m+y].orderList[i].specialinstruction+'</td></tr>';
                    else
                      addToTable += '</td></tr>';
                    addToTable += '</td></tr>';
                    var displayLastDiv = true;
                  }
                }
                m += similarCount - 1;
                if (y > 1 && displayLastDiv) {
                  addToTable += '</tbody></table><br /><button type="button" id="getBarcodeSimilar'+similarDivId+'" class="btn btn-info pull-right" data-address="'+addressArraySimilar+'" onclick="printBarcodeSimilar('+similarDivId+')">Get Address Barcodes</button></div></div>';
                  $('#displaySimilar').append(addToTable);
                  $('#example2').DataTable({
                  "paging": false,
                  "lengthChange": true,
                  "searching": false,
                  "ordering": false,
                  "info": true,
                  "autoWidth": true
                  });
                  displayLastDiv = false;
                }
                
                //barcode Section
                var newDivData = '<div id="displaySimilarBarcode'+similarDivId+'" class = "box box-info"><div class = "box-header">Choose categroy</div><div class = "box-body">';
                for (var i=0; i < similarDivData.length; i++) {
                  for (var j=0; j<similarDivData[i].orderList.length; j++) {
                    newDivData += '<h3><div class="invoice-info"><div class="invoice-col"><strong>'+similarDivData[i].orderList[j]._id.item.title+'<br/><br/>'+similarDivData[i].user+'</br><p align="center">';
                    newDivData += '<address>'+similarDivData[i].address._id.user+'</p><br>'+similarDivData[i].address._id.tag +',</br>'+similarDivData[i].address._id.flatNo+',</br>'+similarDivData[i].address._id.streetAddress+',</br>'+similarDivData[i].address._id.landmark+',</br>'+similarDivData[i].address._id.pincode+'</address>';
                    newDivData += '<div id="bcTarget'+i+'"></div></div></strong></div><br></h3><hr>';
                  }
                }
                newDivData += '<br /><button id="" type="button" class="btn btn-info pull-left" onclick = "printSimilarDiv('+similarDivId+')">Print Address Barcodes list</button><button class="btn btn-info pull-right" data-orderids="" onclick="changeOrderStatus()">Done</button>';
                newDivData += '</div></div>';
                $('#displaySimilarBarcode').append(newDivData);
                $('#displaySimilarBarcode'+similarDivId+'').hide();
              }
              similarDivId++;
            }
            //displaying of Non-Similar Orders
            //console.log(listOfOrdersByAddress);
            var nonSimilarDivData = [], addressArray = [], addressCount = 0;
            $('#displaySection').html('');
            $('#displaySectionBarcode').html('');
            var addToTable = '<div class="box box-success"><div class="box-header"><h3 class="box-title">Mixed Order List - <b>'+$category+'</b></h3></div><!-- /.box-header--><div id="displaySection" class="box-body"><table id="example3" class="table table-bordered table-hover"><thead><tr><th>User</th><th>Address</th><th>Meal</th><th>Details</th><th>Container</th></tr></thead><tbody>';
            for (var m=0; m<listOfOrdersByAddress.length; m++) {
              //console.log(listOfOrdersByAddress[m].mixed);
              for (var i = 0; i < listOfOrdersByAddress[m].orderList.length; i++) {
                if (uniquePositions.indexOf(m) < 0) {
                  addressArray[addressCount] = listOfOrdersByAddress[m].address._id._id;
                  addressCount++;
                  if (i == 0) {
                    addToTable += '<tr><td rowspan='+listOfOrdersByAddress[m].orderList.length+'>'+ listOfOrdersByAddress[m].user +'</td>';
                    addToTable += '<td rowspan='+listOfOrdersByAddress[m].orderList.length+'>'+ listOfOrdersByAddress[m].address._id.tag +',</br>'+listOfOrdersByAddress[m].address._id.flatNo+',</br>'+listOfOrdersByAddress[m].address._id.streetAddress+',</br>'+listOfOrdersByAddress[m].address._id.landmark+',</br>'+listOfOrdersByAddress[m].address._id.pincode+'</td>';
                    nonSimilarDivData.push(listOfOrdersByAddress[m]);
                  }
                  addToTable += '<td>'+ listOfOrdersByAddress[m].orderList[i]._id.item.title +'</td>';
                  addToTable += '<td>';
                  if (listOfOrdersByAddress[m].orderList[i].subItems) {
                    for (var p=0; p<listOfOrdersByAddress[m].orderList[i].subItems._id.subItemsArray.length; p++)
                      addToTable += ''+listOfOrdersByAddress[m].orderList[i].subItems._id.subItemsArray[p].quantity+'-'+listOfOrdersByAddress[m].orderList[i].subItems._id.subItemsArray[p].name+',</br>';
                  }else if (listOfOrdersByAddress[m].orderList[i]._id.subItems.length > 0) {
                    for (var p=0; p<listOfOrdersByAddress[m].orderList[i]._id.subItems.length; p++)
                      addToTable += ''+listOfOrdersByAddress[m].orderList[i]._id.subItems[p].quantity+'-'+listOfOrdersByAddress[m].orderList[i]._id.subItems[p].name+',</br>';
                  }
                  addToTable += '<b>Total Quantity - '+listOfOrdersByAddress[m].orderList[i].singleQuantity+'</td>';
                  addToTable += '<td><b>'+listOfOrdersByAddress[m].orderList[i].containerType+'</b><br>';
                  if (listOfOrdersByAddress[m].orderList[i].specialinstruction)
                    addToTable += '<br /><b> Speacial Instruction - '+listOfOrdersByAddress[m].orderList[i].specialinstruction+'</td></tr>';
                  else
                    addToTable += '</td></tr>';
                  addToTable += '</td></tr>';
                }
              }
            }
            addToTable += '</tbody></table><br /><button id="getBarcode" type="button" class="btn btn-info pull-right" data-address='+[addressArray]+' onclick="printBarcode()">Get Address Barcode</button></div></div>';
            //console.log(addToTable)
            $('#displaySection').append(addToTable);
            $('#example3').DataTable({
            "paging": false,
            "lengthChange": true,
            "searching": false,
            "ordering": false,
            "info": true,
            "autoWidth": true
            });
            
            //barcode Section
            var newDivData = '<div class = "box box-info"><div class = "box-header">Choose categroy</div><div class = "box-body">';
            for (var i=0; i < nonSimilarDivData.length; i++) {
              for (var j=0; j<nonSimilarDivData[i].orderList.length; j++) {
                newDivData += '<h3><div class="invoice-info"><div class="invoice-col"><strong>'+nonSimilarDivData[i].orderList[j]._id.item.title+'<br/><br/>'+nonSimilarDivData[i].user+'</br><p align="center">';
                newDivData += '<address>'+nonSimilarDivData[i].address._id.user+'</p><br>'+nonSimilarDivData[i].address._id.tag +',</br>'+nonSimilarDivData[i].address._id.flatNo+',</br>'+nonSimilarDivData[i].address._id.streetAddress+',</br>'+nonSimilarDivData[i].address._id.landmark+',</br>'+nonSimilarDivData[i].address._id.pincode+'</address>';
                newDivData += '<div id="bcTarget'+i+'"></div></div></strong></div><br></h3><hr>';
              }
            }
            newDivData += '<br /><button id="" type="button" class="btn btn-info pull-left" onclick = "printDiv()">Print order list</button><button class="btn btn-info pull-right" data-orderids="" onclick="changeOrderStatus()">Done</button>';
            newDivData += '</div></div>';
            $('#displaySectionBarcode').append(newDivData);
            $('#displaySectionBarcode').hide();
          });
        });


        $('button#disabler').click(function(){
          var dataTagetButton = $('#example2').attr('data-targetButton');
          var CustomizedButton = $('#example2').attr('data-CustomizedButton');
          $('#example2 tbody').html('');
          $(':button[data-getButton = '+dataTagetButton+']').attr('disabled', true);
          $(':button[data-getButton = '+CustomizedButton+']').attr('disabled', true);
        });
      });
      function printSimilarDiv(x){
         var printContents = document.getElementById("displaySimilarBarcode"+x+"").innerHTML;
         var originalContents = document.body.innerHTML;
         document.body.innerHTML = printContents;
         window.print();
         document.body.innerHTML = originalContents;
      }
      function printDiv(){
         var printContents = document.getElementById("displaySectionBarcode").innerHTML;
         var originalContents = document.body.innerHTML;
         document.body.innerHTML = printContents;
         window.print();
         document.body.innerHTML = originalContents;
      }
      function printBarcode() {
        var addressArray = $('#getBarcode').data('address').split(',');
        console.log(addressArray);
        console.log(addressArray.length);
        console.log(addressArray[0]);
        for (var i=0; i<addressArray.length; i++) {
          $("#bcTarget"+i+"").barcode(addressArray[i], "code128", {barWidth:3, barHeight:60});
        }
        $('#displaySection').hide();
        $('#displaySectionBarcode').show();
      }
      function printBarcodeSimilar(position) {
        var addressArray = $('#getBarcodeSimilar'+position+'').data('address').split(',');
        console.log(addressArray);
        console.log(addressArray.length);
        console.log(addressArray[0]);
        for (var i=0; i<addressArray.length; i++) {
          $("#bcTarget"+i+"").barcode(addressArray[i], "code128", {barWidth:3, barHeight:60});
        }
        $('#'+position).hide();
        $('#displaySimilarBarcode'+position+'').show();
      }
      //- function changeOrderStatus() {
      //-   
      //- }
