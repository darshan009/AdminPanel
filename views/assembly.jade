doctype html
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    title OrderCMS
    // Tell the browser to be responsive to screen width
    meta(content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no', name='viewport')
    // Bootstrap 3.3.5
    link(rel='stylesheet', href='../public/bootstrap/css/bootstrap.min.css')
    // Font Awesome
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css')
    // Ionicons
    link(rel='stylesheet', href='https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css')
    // DataTables
    link(rel='stylesheet', href='../public/plugins/datatables/dataTables.bootstrap.css')
    // Theme style
    link(rel='stylesheet', href='../public/dist/css/AdminLTE.min.css')
    //
      AdminLTE Skins. Choose a skin from the css/skins
      folder instead of downloading all of them to reduce the load.
    link(rel='stylesheet', href='../public/dist/css/skins/_all-skins.min.css')
    // HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries
    // WARNING: Respond.js doesn't work if you view the page via file://
    //if lt IE 9
      script(src='https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js')
      script(src='https://oss.maxcdn.com/respond/1.4.2/respond.min.js')
  body.hold-transition.skin-blue.sidebar-mini
    .wrapper
      header.main-header
        // Logo
        a.logo(href='/itemList')
          // mini logo for sidebar mini 50x50 pixels
          span.logo-mini
            b A
            | LT
          // logo for regular state and mobile devices
          span.logo-lg
            b Order
            | CMS
        // Header Navbar: style can be found in header.less
        nav.navbar.navbar-static-top(role='navigation')
          .navbar-custom-menu
            ul.nav.navbar-nav
              li.dropdown.user.user-menu
                a.dropdown-toggle(href='#', data-toggle='dropdown')
                  img.user-image(src='../public/dist/img/user2-160x160.jpg', alt='User Image')
                  span.hidden-xs #{currentUser.firstName}
                ul.dropdown-menu
                  // User image
                  li.user-header
                    img.img-circle(src='../public/dist/img/user2-160x160.jpg', alt='User Image')
                    p
                      | #{currentUser.firstName} - Web Developer
                      small Admin User
                  // Menu Footer
                  li.user-footer
                    .pull-left
                      a.btn.btn-default.btn-flat(href='#') Profile
                    .pull-right
                      a.btn.btn-default.btn-flat(href='/logout') Sign out
      // Left side column. contains the logo and sidebar
      aside.main-sidebar
        // sidebar: style can be found in sidebar.less
        section.sidebar
          // Sidebar user panel
          .user-panel
            .pull-left.image
              img.img-circle(src='../public/dist/img/user2-160x160.jpg', alt='User Image')
            .pull-left.info
              p #{currentUser.firstName}
          // search form
          form.sidebar-form(action='#', method='get')
            .input-group
              input.form-control(type='text', name='q', placeholder='Search...')
              span.input-group-btn
                button#search-btn.btn.btn-flat(type='submit', name='search')
                  i.fa.fa-search
          // /.search form
          // sidebar menu: : style can be found in sidebar.less
          ul.sidebar-menu
            li.header MAIN NAVIGATION
            if (currentUser.type != 'Chef')
              li
                a(href='#')
                  i.fa.fa-table
                  span User
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/userList')
                      i.fa.fa-circle-o
                      |  List of Users
                  li
                    a(href='/addUser')
                      i.fa.fa-circle-o
                      |  Add a User
              li
                a(href='/item')
                  i.fa.fa-calendar
                  span Item
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/itemList')
                      i.fa.fa-circle-o
                      |  List of Items
                  li
                    a(href='/addItem')
                      i.fa.fa-circle-o
                      |  Add an Item
              li
                a(href='#')
                  i.fa.fa-envelope
                  span ItemCategory
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/categoryList')
                      i.fa.fa-circle-o
                      |  List of Categories
                  li
                    a(href='/addCategory')
                      i.fa.fa-circle-o
                      |  Add a category
              li.treeview
                a(href='#')
                  i.fa.fa-folder
                  span Menu
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/menuList')
                      i.fa.fa-circle-o
                      |  List of Menu
                  li
                    a(href='/addMenu')
                      i.fa.fa-circle-o
                      |  Add a Menu
              li
                a(href='/order')
                  i.fa.fa-share
                  span Order
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li.active
                    a(href='/orderList')
                      i.fa.fa-circle-o
                      |  List of Orders
                  li
                    a(href='/addOrder')
                      i.fa.fa-circle-o
                      |  Place an Order
              li.active
                a(href='/assembly')
                  i.fa.fa-pie-chart
                  span Assembly
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li.active
                    a(href='/assembly')
                      i.fa.fa-circle-o
                      |  Single orders
                  li
                    a(href='/mixedAssembly')
                      i.fa.fa-circle-o
                      |  Mixed Orders
                  li
                    a(href='/multipleAssembly')
                      i.fa.fa-circle-o
                      |  Multiple Category Orders
        // /.sidebar
      // Content Wrapper. Contains page content
      .content-wrapper
        // Main content
        section.content
          .row
            .box.box-info
              .box-header
                h3.box-title
                  b Choose Category
              // /.box-header
              .box-body
                form.form-horizontal
                  .form-group
                    label.col-sm-2.control-label Meal type
                    .col-sm-6
                      select.form-control(name = 'meal' id='mealSelected')
                        option(selected='selected')
                        option Lunch
                        option Dinner
                  .form-group
                    label.col-sm-2.control-label Select Category
                    .col-sm-6
                      table
                        tr
                          each itemCategory in itemCategories
                            td
                              button.btn.btn-app#selectedCategory(type='button' data-getButton='n-#{itemCategory._id}' value = '#{itemCategory.name}')
                                | #{itemCategory.name}
                          td
                            button.btn.btn-app#selectedCategory(type='button' data-getButton='int' value = 'International')
                              | International
                          td
                            button.btn.btn-app#selectedCategory(type='button' data-getButton='Extras' value = 'Extras')
                              | Extras
          .row#displaySimilar
          .row#displaySection
              // /.box-body
            // /.box
          // /.row
        // /.content
      // /.content-wrapper
      footer.main-footer
        .pull-right.hidden-xs
          b Version
          |  2.3.0
        strong
          | OrderCMS WAS Powered by
          a(href='http://keystonejs.com/') KeystoneJS
          | .
        |  version 0.3.16.
    // ./wrapper
    // jQuery 2.1.4
    script(src='../public/plugins/jQuery/jQuery-2.1.4.min.js')
    // Bootstrap 3.3.5
    script(src='../public/bootstrap/js/bootstrap.min.js')
    // FastClick
    script(src='../public/plugins/fastclick/fastclick.min.js')
    // DataTables
    script(src='../public/plugins/datatables/jquery.dataTables.min.js')
    script(src='../public/plugins/datatables/dataTables.bootstrap.min.js')
    // AdminLTE App
    script(src='../public/dist/js/app.min.js')
    // page script
    script.
      $(function () {
        //non-customized
        $('button#selectedCategory').click(function(){
          $category = $(this).val();
          $meal = $('#mealSelected').val();
          $buttonDisablerId = $(this).attr('data-getButton');
          if ( !$('#mealSelected').val() )
          alert("Please Select Lunch or Dinner");
          //get todays date
          var today = new Date();
          var dd = today.getDate();
          var mm = today.getMonth()+1; //January is 0!
          var yyyy = today.getFullYear();
          if(dd<10){
              dd='0'+dd
          }
          if(mm<10){
              mm='0'+mm
          }
          var today = dd+'-'+mm+'-'+yyyy;
          console.log(today);
          $.getJSON("http://os.foodees.in/Services/Services.svc/Gettodaysorderbycustomer/"+'07-04-2016'+','+$meal, {
          category : $category,
          meal : $meal,
          ajax : true
          },function(j){
            //get all orders
            var allOrders = [], sortedOrders = [], listOfOrdersByAddress = [];
            allOrders = allOrders.concat(j.GettodaysorderbycustomerResult.listnoncustomizeorder);
            allOrders = allOrders.concat(j.GettodaysorderbycustomerResult.listcustomizeorder);
            var listOfOrdersByAddressCounter = 0, listOfAddresses = [];
            console.log(allOrders.length);

            var positions = [];
            //push similar orders into sortedOrders
            for (var y=0; y<allOrders.length; y++) {
              if (allOrders[y].subdetails && allOrders[y].subdetails.length > 0) {
                var checker = true;
                for (var z=allOrders.length - 1; z>y; z--) {
                  if (allOrders[z].subdetails && allOrders[z].subdetails.length > 0) {
                    if (allOrders[y].subdetails == allOrders[z].subdetails && y != z) {
                      //if (positions.indexOf(y) < 0 && positions.indexOf(z) < 0) {
                        positions.push(y);
                        positions.push(z);
                      //}
                    }
                  }
                }
              }
            }
            //get unique positions
            var uniquePositions = [];
            for (var a=0; a<positions.length; a++) {
              if (uniquePositions.indexOf(positions[a]) < 0)
                uniquePositions.push(positions[a]);
            }
            //now get sorted arrays
            for (var b=0; b<uniquePositions.length; b++) {
              sortedOrders.push(allOrders[uniquePositions[b]]);
            }
            var similarOrdersLength = sortedOrders.length;
            //console.log(sortedOrders)
            //push the remaining arrays into sortedOrders
            for (var y=0; y<allOrders.length; y++) {
              if (uniquePositions.indexOf(y) < 0)
                sortedOrders.push(allOrders[y]);
            }
            console.log(sortedOrders.length);


            //sort all orders into listOfOrdersByAddress
            for (var i=0; i<sortedOrders.length; i++) {
              //get all unique addresses
              if (listOfAddresses.indexOf(sortedOrders[i].custaddress) < 0) {
                listOfOrdersByAddress[listOfOrdersByAddressCounter] = {
                  address : sortedOrders[i].custaddress
                };
                listOfAddresses.push(sortedOrders[i].custaddress);
                listOfOrdersByAddressCounter++;
              }
            }
            //console.log(listOfOrdersByAddress.length);
            /*
            *----- get orders by each user
            *----- sort by mealType && category
            */
            for (var k=0; k<listOfOrdersByAddress.length; k++) {
              listOfOrdersByAddress[k].orderList = [];
              listOfOrdersByAddress[k].orderCount = 0;
              for (var l=0; l<sortedOrders.length; l++) {
                if (listOfOrdersByAddress[k].address == sortedOrders[l].custaddress) {
                  listOfOrdersByAddress[k].orderCount++;
                  //
                  if (l < similarOrdersLength)
                    listOfOrdersByAddress[k].similar = true;
                  //get all Orders by selected category & per address
                  if (sortedOrders[l].catName == $category)
                    listOfOrdersByAddress[k].orderList.push(sortedOrders[l]);
                }
              }
            }

            $('#displaySimilar').html('');
            //displaying similar orders first
            for (var m=0; m<listOfOrdersByAddress.length; m++) {
              //if (m < 14)
                //console.log(listOfOrdersByAddress[m].similar);
              if (listOfOrdersByAddress[m].orderCount == 1 && listOfOrdersByAddress[m].similar == true) {
                var similarCount = 0;
                for (var z=m; z<listOfOrdersByAddress.length; z++) {
                  //console.log(listOfOrdersByAddress[m]);
                  if (listOfOrdersByAddress[z].orderCount == 1 && listOfOrdersByAddress[z].orderList.length > 0 && listOfOrdersByAddress[m].orderList[0].subdetails == listOfOrdersByAddress[z].orderList[0].subdetails) {
                    listOfOrdersByAddress[z].orderCount;
                    similarCount++;
                  }else
                    break;
                }
                if (similarCount > 0) {
                  var addToTableSimilar = '<div class="box box-success"><div class="box-header"><h3 class="box-title">Similar Order List - <b>'+$category+',  Details--'+listOfOrdersByAddress[m].orderList[0].subdetails+'</b></h3></div><!-- /.box-header--><div id="displaySimiliar" class="box-body"><table id="example3" class="table table-bordered table-hover"><thead><tr><th>User</th><th>Address</th><th>Meal</th><th>Details</th><th>Container</th></tr></thead><tbody>';
                  for (var y=0; y<similarCount; y++) {
                    for (var i = 0; i < listOfOrdersByAddress[m+y].orderList.length; i++) {
                      if (i == 0) {
                        addToTableSimilar += '<tr><td rowspan='+listOfOrdersByAddress[m+y].orderList.length+'>'+ listOfOrdersByAddress[m+y].orderList[0].customerName +'</td>';
                        var formattedString = listOfOrdersByAddress[m+y].address.split(",").join(",<br />");
                        addToTableSimilar += '<td rowspan='+listOfOrdersByAddress[m+y].orderList.length+'>'+ formattedString +'</td>';
                      }
                      addToTableSimilar += '<td>'+ listOfOrdersByAddress[m+y].orderList[i].Meal_Name +'</td>';
                      addToTableSimilar += '<td>'
                      if (listOfOrdersByAddress[m+y].orderList[i].subdetails) {
                        var formattedString = listOfOrdersByAddress[m+y].orderList[i].subdetails.split(",").join(",<br />");
                        addToTableSimilar += ''+ formattedString+',<br>';
                      }
                      addToTableSimilar += '<b>Total Quantity - '+listOfOrdersByAddress[m+y].orderList[i].qty+'</td>';
                      addToTableSimilar += '<td><b>'+listOfOrdersByAddress[m+y].orderList[i].containertype+'</b><br>';
                      if (listOfOrdersByAddress[m+y].orderList[i].specialinstruction)
                        addToTableSimilar += '<br /><b> Speacial Instruction - '+listOfOrdersByAddress[m+y].orderList[i].specialinstruction+'</td></tr>';
                      else
                        addToTableSimilar += '</td></tr>';
                      addToTableSimilar += '</td></tr>';
                    }
                  }
                  m += similarCount;
                  addToTableSimilar += '</tbody></table><br /><button id="" type="button" class="btn btn-info pull-left" onclick = "printDiv()">Print</button><button id="" type="button" class="btn btn-info pull-right">Next</button></div></div>';
                  //console.log(addToTableSimilar)
                  $('#displaySimilar').attr('data-CustomizedButton', $buttonDisablerId);
                  $('#displaySimilar').append(addToTableSimilar);
                  $('#example3').DataTable({
                  "paging": true,
                  "lengthChange": true,
                  "searching": true,
                  "ordering": false,
                  "info": true,
                  "autoWidth": true
                  });
                }
              }
            }

            //console.log(listOfOrdersByAddress);
            //displaying of listOfOrdersByAddress
            var addToTable = '<div class="box box-success"><div class="box-header"><h3 class="box-title"><b>Non-Similar Order List -'+$category+'</b></h3></div><!-- /.box-header--><div id="displaySection" class="box-body"><table id="example2" class="table table-bordered table-hover"><thead><tr><th>User</th><th>Address</th><th>Meal</th><th>Details</th><th>Container</th></tr></thead><tbody>';
            for (var m=0; m<listOfOrdersByAddress.length; m++) {
              if (listOfOrdersByAddress[m].orderCount == 1 && listOfOrdersByAddress[m].similar == undefined) {
                for (var i = 0; i < listOfOrdersByAddress[m].orderList.length; i++) {
                  if (i == 0) {
                    addToTable += '<tr><td rowspan='+listOfOrdersByAddress[m].orderList.length+'>'+ listOfOrdersByAddress[m].orderList[0].customerName +'</td>';
                    var formattedString = listOfOrdersByAddress[m].address.split(",").join(",<br />");
                    addToTable += '<td rowspan='+listOfOrdersByAddress[m].orderList.length+'>'+ formattedString +'</td>';
                  }
                  addToTable += '<td>'+ listOfOrdersByAddress[m].orderList[i].Meal_Name +'</td>';
                  addToTable += '<td>'
                  if (listOfOrdersByAddress[m].orderList[i].subdetails) {
                    var formattedString = listOfOrdersByAddress[m].orderList[i].subdetails.split(",").join(",<br />");
                    addToTable += ''+ formattedString+',<br>';
                  }
                  addToTable += '<b>Total Quantity - '+listOfOrdersByAddress[m].orderList[i].qty+'</td>';
                  addToTable += '<td><b>'+listOfOrdersByAddress[m].orderList[i].containertype+'</b><br>';
                  if (listOfOrdersByAddress[m].orderList[i].specialinstruction)
                    addToTable += '<br /><b> Speacial Instruction - '+listOfOrdersByAddress[m].orderList[i].specialinstruction+'</td></tr>';
                  else
                    addToTable += '</td></tr>';
                  addToTable += '</td></tr>';
                }
              }
            }
            addToTable += '</tbody></table><br /><button id="" type="button" class="btn btn-info pull-left" onclick = "printDiv()">Print</button><button id="" type="button" class="btn btn-info pull-right">Next</button></div></div>';
            //console.log(addToTable)
            $('#displaySection').attr('data-CustomizedButton', $buttonDisablerId);
            $('#displaySection').html('');
            $('#displaySection').append(addToTable);
            $('#example2').DataTable({
            "paging": true,
            "lengthChange": true,
            "searching": true,
            "ordering": false,
            "info": true,
            "autoWidth": true
            });
          });
        });



        $('button#disabler').click(function(){
          var dataTagetButton = $('#example2').attr('data-targetButton');
          var CustomizedButton = $('#example2').attr('data-CustomizedButton');
          $('#example2 tbody').html('');
          $(':button[data-getButton = '+dataTagetButton+']').attr('disabled', true);
          $(':button[data-getButton = '+CustomizedButton+']').attr('disabled', true);
        });
      });
      function printDiv(){
         var printContents = document.getElementById("displaySection").innerHTML;
         var originalContents = document.body.innerHTML;
         document.body.innerHTML = printContents;
         window.print();
         document.body.innerHTML = originalContents;
      }
