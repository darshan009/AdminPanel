doctype html
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    title OrderCMS
    // Tell the browser to be responsive to screen width
    meta(content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no', name='viewport')
    // Bootstrap 3.3.5
    link(rel='stylesheet', href='../public/bootstrap/css/bootstrap.min.css')
    // Font Awesome
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css')
    // Ionicons
    link(rel='stylesheet', href='https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css')
    // DataTables
    link(rel='stylesheet', href='../public/plugins/datatables/dataTables.bootstrap.css')
    // Theme style
    link(rel='stylesheet', href='../public/dist/css/AdminLTE.min.css')
    //
      AdminLTE Skins. Choose a skin from the css/skins
      folder instead of downloading all of them to reduce the load.
    link(rel='stylesheet', href='../public/dist/css/skins/_all-skins.min.css')
    // HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries
    // WARNING: Respond.js doesn't work if you view the page via file://
    //if lt IE 9
      script(src='https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js')
      script(src='https://oss.maxcdn.com/respond/1.4.2/respond.min.js')
  body.hold-transition.skin-blue.sidebar-mini
    .wrapper
      header.main-header
        // Logo
        a.logo(href='/itemList')
          // mini logo for sidebar mini 50x50 pixels
          span.logo-mini
            b A
            | LT
          // logo for regular state and mobile devices
          span.logo-lg
            b Order
            | CMS
        // Header Navbar: style can be found in header.less
        nav.navbar.navbar-static-top(role='navigation')
          .navbar-custom-menu
            ul.nav.navbar-nav
              li.dropdown.user.user-menu
                a.dropdown-toggle(href='#', data-toggle='dropdown')
                  img.user-image(src='../public/dist/img/user2-160x160.jpg', alt='User Image')
                  span.hidden-xs #{currentUser.firstName}
                ul.dropdown-menu
                  // User image
                  li.user-header
                    img.img-circle(src='../public/dist/img/user2-160x160.jpg', alt='User Image')
                    p
                      | #{currentUser.firstName} - Web Developer
                      small Admin User
                  // Menu Footer
                  li.user-footer
                    .pull-left
                      a.btn.btn-default.btn-flat(href='#') Profile
                    .pull-right
                      a.btn.btn-default.btn-flat(href='/logout') Sign out
      // Left side column. contains the logo and sidebar
      aside.main-sidebar
        // sidebar: style can be found in sidebar.less
        section.sidebar
          // Sidebar user panel
          .user-panel
            .pull-left.image
              img.img-circle(src='../public/dist/img/user2-160x160.jpg', alt='User Image')
            .pull-left.info
              p #{currentUser.firstName}
          // search form
          form.sidebar-form(action='#', method='get')
            .input-group
              input.form-control(type='text', name='q', placeholder='Search...')
              span.input-group-btn
                button#search-btn.btn.btn-flat(type='submit', name='search')
                  i.fa.fa-search
          // /.search form
          // sidebar menu: : style can be found in sidebar.less
          ul.sidebar-menu
            li.header MAIN NAVIGATION
            if (currentUser.type != 'Chef')
              li
                a(href='#')
                  i.fa.fa-table
                  span User
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/userList')
                      i.fa.fa-circle-o
                      |  List of Users
                  li
                    a(href='/addUser')
                      i.fa.fa-circle-o
                      |  Add a User
              li
                a(href='/item')
                  i.fa.fa-calendar
                  span Item
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/itemList')
                      i.fa.fa-circle-o
                      |  List of Items
                  li
                    a(href='/addItem')
                      i.fa.fa-circle-o
                      |  Add an Item
              li
                a(href='#')
                  i.fa.fa-envelope
                  span ItemCategory
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/categoryList')
                      i.fa.fa-circle-o
                      |  List of Categories
                  li
                    a(href='/addCategory')
                      i.fa.fa-circle-o
                      |  Add a category
              li.treeview
                a(href='#')
                  i.fa.fa-folder
                  span Menu
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li
                    a(href='/menuList')
                      i.fa.fa-circle-o
                      |  List of Menu
                  li
                    a(href='/addMenu')
                      i.fa.fa-circle-o
                      |  Add a Menu
              li
                a(href='/order')
                  i.fa.fa-share
                  span Order
                  i.fa.fa-angle-left.pull-right
                ul.treeview-menu
                  li.active
                    a(href='/orderList')
                      i.fa.fa-circle-o
                      |  List of Orders
                  li
                    a(href='/addOrder')
                      i.fa.fa-circle-o
                      |  Place an Order
            li.active
              a(href='/assembly')
                i.fa.fa-pie-chart
                | Assembly
        // /.sidebar
      // Content Wrapper. Contains page content
      .content-wrapper
        // Main content
        section.content
          .row
            .col-md-6
              .box.box-primary
                .box-header
                  h3.box-title
                    b Customized
                // /.box-header
                .box-body
                  form.form-horizontal
                    .form-group
                      label.col-sm-2.control-label Meal type
                      .col-sm-6
                        select.form-control(name = 'meal' id='customizedMealSelected')
                          option(selected='selected')
                          option Lunch
                          option Dinner
                  table
                    tr
                      each customizableCategories in customizableCategory
                        td
                          button.btn.btn-app#selectedCustomized(type='button' data-getButton='c-#{customizableCategories.id}' value = '#{customizableCategories.name}')
                            | #{customizableCategories.name}
            .col-md-6
              .box.box-info
                .box-header
                  h3.box-title
                    b Non-Customized
                // /.box-header
                .box-body
                  form.form-horizontal
                    .form-group
                      label.col-sm-2.control-label Meal type
                      .col-sm-6
                        select.form-control(name = 'meal' id='mealSelected')
                          option(selected='selected')
                          option Lunch
                          option Dinner
                  table
                    tr
                      each itemCategory in itemCategories
                        td
                          button.btn.btn-app#selectedCategory(type='button' data-getButton='n-#{itemCategory._id}' value = '#{itemCategory.name}')
                            | #{itemCategory.name}
          .row
            .box.box-success
              .box-header
                h3.box-title Order List
                button.btn.btn-info.pull-right#disabler(type = 'button') Assembled
              // /.box-header
              .box-body#displaySection
                table#example2.table.table-bordered.table-hover
                  thead
                    tr
                      th User
                      th Address
                      th Meal
                      th Details
                  tbody
              // /.box-body
            // /.box
          // /.row
        // /.content
      // /.content-wrapper
      footer.main-footer
        .pull-right.hidden-xs
          b Version
          |  2.3.0
        strong
          | OrderCMS WAS Powered by
          a(href='http://keystonejs.com/') KeystoneJS
          | .
        |  version 0.3.16.
    // ./wrapper
    // jQuery 2.1.4
    script(src='../public/plugins/jQuery/jQuery-2.1.4.min.js')
    // Bootstrap 3.3.5
    script(src='../public/bootstrap/js/bootstrap.min.js')
    // FastClick
    script(src='../public/plugins/fastclick/fastclick.min.js')
    // DataTables
    script(src='../public/plugins/datatables/jquery.dataTables.min.js')
    script(src='../public/plugins/datatables/dataTables.bootstrap.min.js')
    // AdminLTE App
    script(src='../public/dist/js/app.min.js')
    // page script
    script.
      $(function () {
      $("#example1").DataTable();
      $('#example2').DataTable({
      "paging": true,
      "lengthChange": false,
      "searching": false,
      "ordering": true,
      "info": true,
      "autoWidth": false
      });
      //non-customized
      $('button#selectedCategory').click(function(){
        $category = $(this).val();
        $meal = $('#mealSelected').val();
        $buttonDisablerId = $(this).attr('data-getButton');
        if ( !$('#mealSelected').val() )
        alert("Please Select Lunch or Dinner");
        //get todays date
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth()+1; //January is 0!
        var yyyy = today.getFullYear();
        if(dd<10){
            dd='0'+dd
        }
        if(mm<10){
            mm='0'+mm
        }
        var today = dd+'-'+mm+'-'+yyyy;
        console.log(today);
        $.getJSON("http://os.foodees.in/Services/Services.svc/Gettodaysorderbycustomer/"+today+','+$meal, {
        category : $category,
        meal : $meal,
        ajax : true
        },function(j){
          //first sorting of all orders by users && category
          var noncustomizedOrders = j.GettodaysorderbycustomerResult.listnoncustomizeorder;
          var listOfUsers = [], ordersByCategory = [], sortedOrderList = [];
          for (var i=0; i<noncustomizedOrders.length; i++) {
            //get all users in orders
            if (listOfUsers.indexOf(noncustomizedOrders[i].custaddress) < 0)
              listOfUsers.push(noncustomizedOrders[i].custaddress);
            //get all Orders by selected category
            if (noncustomizedOrders[i].catName == $category)
              ordersByCategory.push(noncustomizedOrders[i]);
          }

          //group all orders by users
          for (var k=0; k<listOfUsers.length; k++) {
            sortedOrderList[k] = {
              user : listOfUsers[k],
              orderList : []
            }
            //push all orders of that user here
            for (var l=0; l<ordersByCategory.length; l++)
              if (listOfUsers[k] == ordersByCategory[l].custaddress)
                sortedOrderList[k].orderList.push(ordersByCategory[l])
            //get orders length for each user
            sortedOrderList[k].ordersLength = sortedOrderList[k].orderList.length;
          }

          console.log(listOfUsers.length);

          //displaying of sortedOrderList
          var addToTable = '';
          for (var m=0; m<sortedOrderList.length; m++) {
            for (var i = 0; i < sortedOrderList[m].orderList.length; i++) {
              if (i == 0) {
                addToTable += '<tr><td rowspan='+sortedOrderList[m].orderList.length+'>'+ sortedOrderList[m].orderList[0].customerName +'</td>';
                var formattedString = sortedOrderList[m].orderList[0].custaddress.split(",").join(",<br />");
                addToTable += '<td rowspan='+sortedOrderList[m].orderList.length+'>'+ formattedString +'</td>';
              }
              addToTable += '<td>'+ sortedOrderList[m].orderList[i].Meal_Name +'</td>';
              addToTable += '<td>'
              if (sortedOrderList[m].orderList[i].subdetails) {
                var formattedString = sortedOrderList[m].orderList[i].subdetails.split(",").join(",<br />");
                addToTable += ''+ formattedString+',<br>';
              }
              addToTable += '<b>Container-'+sortedOrderList[m].orderList[i].containertype+'</b><br>';
              addToTable += '<b>Total Quantity - '+sortedOrderList[m].orderList[i].qty+'</td></tr>';
              if (sortedOrderList[m].orderList[i].specialinstruction)
                addToTable += '<b> Speacial Instruction - '+sortedOrderList[m].orderList[i].specialinstruction+'';
              addToTable += '</td></tr>';
            }
          }
          addToTable += '</tbody></table>'
          $('#example2').attr('data-CustomizedButton', $buttonDisablerId);
          $('#example2 tbody').html('');
          $('#example2 tbody').append(addToTable);
          $('#example2').DataTable({
          "paging": true,
          "lengthChange": false,
          "searching": false,
          "ordering": true,
          "info": true,
          "autoWidth": false
          });
        })
      });
      //server request for customized
      $('button#selectedCustomized').click(function(){
        $category = $(this).val();
        $buttonDisablerId = $(this).attr('data-getButton');
        $meal = $('#customizedMealSelected').val();
        if ( !$('#customizedMealSelected').val() )
          alert("Please Select Lunch or Dinner");
        //get todays date
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth()+1; //January is 0!
        var yyyy = today.getFullYear();
        if(dd<10){
            dd='0'+dd
        }
        if(mm<10){
            mm='0'+mm
        }
        var today = dd+'-'+mm+'-'+yyyy;
        console.log(today);
        $.getJSON("http://os.foodees.in/Services/Services.svc/Gettodaysorderbycustomer/"+today+','+$meal, {
        },function(j){
          var customizedOrders = j.GettodaysorderbycustomerResult.listcustomizeorder;
          var listOfUsers = [], ordersByCategory = [], sortedOrderList = [];
          for (var i=0; i<customizedOrders.length; i++) {
            //get all users in orders
            if (listOfUsers.indexOf(customizedOrders[i].custaddress) < 0)
              listOfUsers.push(customizedOrders[i].custaddress);
            //get all Orders by selected category
            if (customizedOrders[i].catName == $category)
              ordersByCategory.push(customizedOrders[i]);
          }

          //group all orders by users
          for (var k=0; k<listOfUsers.length; k++) {
            sortedOrderList[k] = {
              user : listOfUsers[k],
              orderList : []
            }
            //push all orders of that user here
            for (var l=0; l<ordersByCategory.length; l++)
              if (listOfUsers[k] == ordersByCategory[l].custaddress)
                sortedOrderList[k].orderList.push(ordersByCategory[l])
            //get orders length for each user
            sortedOrderList[k].ordersLength = sortedOrderList[k].orderList.length;
          }

          //displaying of sortedOrderList
          var addToTable = '';
          for (var m=0; m<sortedOrderList.length; m++) {
            for (var i = 0; i < sortedOrderList[m].orderList.length; i++) {
              if (i == 0) {
                addToTable += '<tr><td rowspan='+sortedOrderList[m].orderList.length+'>'+ sortedOrderList[m].orderList[0].customerName +'</td>';
                var formattedString = sortedOrderList[m].orderList[0].custaddress.split(",").join(",<br />");
                addToTable += '<td rowspan='+sortedOrderList[m].orderList.length+'>'+ formattedString +'</td>';
              }
              addToTable += '<td>'+ sortedOrderList[m].orderList[i].Meal_Name +'</td>';
              if (sortedOrderList[m].orderList[i].subdetails) {
                addToTable += '<td>'
                var formattedString = sortedOrderList[m].orderList[i].subdetails.split(",").join(",<br />");
                addToTable += ''+ formattedString+',<br><b>Container-'+sortedOrderList[m].orderList[i].containertype+'</b><br>';
                addToTable += '<b>Total Quantity - '+sortedOrderList[m].orderList[i].qty+'</td></tr>';
              }
              else
                addToTable += '</tr>';
            }
          }
          addToTable += '</tbody></table>'
          $('#example2').attr('data-CustomizedButton', $buttonDisablerId);
          $('#example2 tbody').html('');
          $('#example2 tbody').append(addToTable);
          $('#example2').DataTable({
          "paging": true,
          "lengthChange": false,
          "searching": false,
          "ordering": true,
          "info": true,
          "autoWidth": false
          });
        });
      });
      $('button#disabler').click(function(){
        var dataTagetButton = $('#example2').attr('data-targetButton');
        var CustomizedButton = $('#example2').attr('data-CustomizedButton');
        $('#example2 tbody').html('');
        $(':button[data-getButton = '+dataTagetButton+']').attr('disabled', true);
        $(':button[data-getButton = '+CustomizedButton+']').attr('disabled', true);
      });
      });
